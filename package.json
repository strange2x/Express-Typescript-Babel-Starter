{
  "name": "user-babel",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "jest --coverage --verbose",
    "build": "tsc && babel ./src --out-dir dist --extensions \".ts,.tsx\"",
    "production-build": "npm run test && echo Testing Success, building production bundle ðŸ”¥ && npm run build",
    "dev": "nodemon src/index.ts"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "^7.15.4",
    "@babel/core": "^7.15.5",
    "@babel/plugin-proposal-class-properties": "^7.14.5",
    "@babel/plugin-proposal-object-rest-spread": "^7.15.6",
    "@babel/preset-env": "^7.15.6",
    "@babel/preset-typescript": "^7.15.0",
    "@types/jest": "^27.0.1",
    "@types/node": "^16.9.2",
    "@types/express": "^4.17.13",
    "@typescript-eslint/eslint-plugin": "^4.31.1",
    "babel-eslint": "^10.1.0",
    "babel-jest": "^27.2.0",
    "eslint": "^7.32.0",
    "jest": "^27.2.0",
    "nodemon": "^2.0.12",
    "ts-node": "^10.2.1",
    "typescript": "^4.4.3"
  },
  "dependencies": {
    "express": "^4.17.1"
  },
  "eslintConfig": {
    "env": {
      "es2021": true,
      "jest": true
    },
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended"
    ],
    "parser": "babel-eslint",
    "parserOptions": {
      "ecmaVersion": 12,
      "sourceType": "module"
    },
    "plugins": [
      "@typescript-eslint"
    ],
    "rules": {
      "indent": [
        "error",
        2
      ],
      "linebreak-style": [
        "error",
        "unix"
      ],
      "quotes": [
        "error",
        "single"
      ],
      "semi": [
        "error",
        "always"
      ],
      "eqeqeq": [
        "error",
        "always"
      ],
      "max-lines": [
        "error",
        200
      ],
      "max-lines-per-function": [
        "error",
        20
      ],
      "no-duplicate-case": "error",
      "no-duplicate-imports": "error",
      "no-empty": "error",
      "no-unreachable": "error",
      "default-case": "error",
      "yoda": "error",
      "no-undef": "warn",
      "func-style": [
        "error",
        "expression"
      ],
      "for-direction": "error",
      "arrow-parens": "error",
      "camelcase": "error",
      "consistent-return": "error"
    }
  },
  "prettier": {
    "trailingComma": "es5",
    "tabWidth": 2,
    "semi": true,
    "singleQuote": true,
    "useTabs": false,
    "jsxSingleQuote": true,
    "bracketSpacing": true,
    "bracketSameLine": true,
    "arrowParens": "always",
    "endOfLine": "lf",
    "embeddedLanguageFormatting": "auto"
  }
}
